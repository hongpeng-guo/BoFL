import gurobipy as gp
from gurobipy import GRB
from getPareto import get_Pareto
import numpy as np
import scipy.sparse as sp
from time import time


def exploitOpt(pareto, ddl, workload):

    pareto, pareto_size = np.array(pareto), len(pareto)

    m = gp.Model("mip1")

    x = m.addMVar(pareto_size, vtype=GRB.INTEGER)
    m.setObjective(pareto[:, 1] @ x, GRB.MINIMIZE)

    m.addConstr(x.sum() == workload, "c0")
    m.addConstr(pareto[:, 0] @ x <= ddl, "c1")

    m.optimize()

    for v in m.getVars():
        print('%s %g' % (v.VarName, v.X))

    print('Obj: %g' % m.ObjVal)


if __name__ == '__main__':

    pareto, _ = get_Pareto('CIFAR10.json')
    ddl, workload = 75, 150

    t0 = time()
    exploitOpt(pareto, ddl, workload)
    t1 = time()

    print(t1 - t0)
